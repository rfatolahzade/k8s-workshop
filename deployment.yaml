apiVersion: apps/v1
kind: Deployment
metadata:
 name: nginx-deployment
 labels:
   app: nginx
 annotations:
  kubernetes.io/change-cause: 'Changing nginx image to 1.18'

spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  paused: false
  revisionHistoryLimit: 20
  selector:
    matchLabels:
      app: nginx
#Pod template start:
  template:
    metadata:
      labels:
       app: nginx
    spec:
     containers:
     - name: nginx
       image: nginx:1.18
       ports:
        - containerPort: 80
#Pod template end	
#Checkout Startup of the start the app inner container.
       startupProbe:
         exec:
#           command:
#           - cat
#           - /etc/nginx/nginx.conf
         httpGet:
           port: 80
           path: /
#           path: /nginx   # Startup probe failed: HTTP probe failed with statuscode: 404- Unhealthy
#           httpHeaders:
#             - name:
#               value:
#         tcpSocket:
#            port: 80
         initialDelaySeconds: 10
         periodSeconds: 5
         failureThreshold: 2
         successThreshold: 1
#Checkout pod in the good state - container stat -describe-events
       livenessProbe:
         httpGet:
           port: 80
           path: /
#         tcpSocket:
#            port: 80
         initialDelaySeconds: 5
         periodSeconds: 5
         failureThreshold: 2
         successThreshold: 1  #Default
#Checkout the app inner container-response to requests -app has a problem - log of container
       readinessProbe:
         httpGet:
           port: 80
           path: /
#         tcpSocket:
#            port: 80
         initialDelaySeconds: 5
         periodSeconds: 5
         failureThreshold: 2
         successThreshold: 2
       resources:
         requests:          #Startup Reserve 
           memory: "16Mi"
           cpu: "10m"     # 1000m = 1 CPU
         limits:
           memory: "18Mi"  #using limits ,max of req, kube control manager manage it, limit for container.
           cpu: "10m"
       volumeMounts:
         - name: ap-storage
           mountPath: /var/www/html    #hostpath.path:"/home/app-pv"
     volumes:
      - name: ap-storage
        persistentVolumeClaim:
          claimName: app-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-clusterip
spec:
  selector:
    app: nginx
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
spec:
  selector:
    app: nginx
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
  type: LoadBalancer